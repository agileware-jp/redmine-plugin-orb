description: Install Redmine's gems

parameters:
  cache_key_prefix:
    description: Prefix of cache key
    type: string
    default: redmine-plugin-commands-setup-
  redmine_root:
    description: Directory where redmine is installed
    type: string
    default: redmine
  update_packages:
    description: Package names for updating
    type: string
    default: ''

steps:
  - run:
      name: Check ruby version
      command: |
        ruby -v > /tmp/ruby-version
  - run:
      name: Touch Gemfile.local if not exists
      command: |
        f="<< parameters.redmine_root >>/Gemfile.local"
        test -e "$f" || touch "$f"
  - restore_cache:
      keys:
        - '<< parameters.cache_key_prefix >>{{ checksum "/tmp/ruby-version" }}-{{ checksum "<< parameters.redmine_root >>/Gemfile" }}-{{ checksum "<< parameters.redmine_root >>/Gemfile.local" }}-{{ checksum "<< parameters.redmine_root >>/config/database.yml" }}'
  - run:
      name: key installation for chrome gpg key
      command: |
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo tee /etc/apt/trusted.gpg.d/google.asc >/dev/null
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/google.gpg >/dev/null
  - run:
      name: Install related packages
      command: |
        sudo apt-get update
        if test "$DATABASE_ADAPTER" = sqlite3
        then
          sudo apt-get install -y libsqlite3-dev
        fi
  - run:
      name: Add missing gems
      working_directory: '<< parameters.redmine_root >>'
      command: |
        # https://www.redmine.org/issues/40802
        if grep -q "require 'blankslate'" lib/redmine/views/builders/structure.rb
        then
          echo 'gem "blankslate"' >> Gemfile
        fi
  - run:
      name: Execute bundle install
      working_directory: '<< parameters.redmine_root >>'
      command: bundle check --path vendor/bundle || bundle install --path vendor/bundle
  - when:
      condition: << parameters.update_packages >>
      steps:
        - run:
            name: Execute bundle update if update_packages was given
            working_directory: '<< parameters.redmine_root >>'
            command: bundle update << parameters.update_packages >>
  - save_cache:
      key: '<< parameters.cache_key_prefix >>{{ checksum "/tmp/ruby-version" }}-{{ checksum "<< parameters.redmine_root >>/Gemfile" }}-{{ checksum "<< parameters.redmine_root >>/Gemfile.local" }}-{{ checksum "<< parameters.redmine_root >>/config/database.yml" }}'
      paths:
        - << parameters.redmine_root >>/vendor/bundle
        - << parameters.redmine_root >>/Gemfile.lock
